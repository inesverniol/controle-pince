<!DOCTYPE html>
<html lang="fr">
<head>
  <meta charset="UTF-8">
  <title>Contrôle Pince UR10</title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <style>
    body {
      margin: 0;
      padding: 0;
      font-family: 'Segoe UI', sans-serif;
      background-color: #f9fafb;
      display: flex;
      flex-direction: column;
      align-items: center;
      padding: 20px;
    }

    h1 {
      color: #1f2937;
      margin-bottom: 10px;
    }

    .control-panel, .feedback-panel {
      display: flex;
      flex-wrap: wrap;
      justify-content: center;
      gap: 20px;
      margin: 20px 0;
    }

    .button-grid {
      display: grid;
      grid-template-columns: 60px 60px;
      grid-template-rows: 60px 60px;
      gap: 10px;
      justify-content: center;
    }

    .button-grid button, .rotation-buttons button {
      background-color: #3b82f6;
      color: white;
      border: none;
      border-radius: 8px;
      font-size: 1.2rem;
      cursor: pointer;
      box-shadow: 0 2px 5px rgba(0,0,0,0.1);
      transition: background-color 0.2s;
    }

    .button-grid button:hover, .rotation-buttons button:hover {
      background-color: #2563eb;
    }

    .sensor-display {
      background: #e5e7eb;
      padding: 15px 25px;
      border-radius: 12px;
      text-align: center;
      min-width: 160px;
      font-weight: bold;
      font-size: 1.1rem;
    }

    #gripper-view {
      width: 200px;
      height: 200px;
      border: 2px solid #d1d5db;
      margin-top: 20px;
      border-radius: 10px;
      background: #f3f4f6;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .gripper-icon {
      width: 80px;
      height: 120px;
      background-color: #4b5563;
      border-radius: 10px;
      transition: transform 0.3s ease-in-out;
    }
  </style>
</head>
<body>
  <h1>Contrôle de la Pince UR10</h1>

  <div class="control-panel">
    <!-- Boutons Ouvrir/Fermer -->
    <div class="button-grid">
      <button onclick="sendCommand('open')">Ouvrir</button>
      <button onclick="sendCommand('close')">Fermer</button>
    </div>
  </div>

  <div class="feedback-panel">
    <div class="sensor-display" id="forceDisplay">Force: -- N</div>
    <div class="sensor-display" id="positionDisplay">Position: -- °</div>
  </div>

  <div id="gripper-view">
    <div class="gripper-icon" id="gripperIcon"></div>
  </div>

  <script>
    function sendCommand(action) {
      console.log("Commande envoyée:", action);
      const ip = "http://"; // Remplace avec l'IP de ton ESP32
      if (action === "open") {
        fetch(${ip}/open);  // Envoie la commande pour ouvrir la pince
      } else if (action === "close") {
        fetch(${ip}/close); // Envoie la commande pour fermer la pince
      }
    }

    // Fonction pour mettre à jour la force affichée
    function updateForceDisplay(force) {
      document.getElementById('forceDisplay').textContent = Force: ${force.toFixed(2)} N;
    }

    // Fonction pour mettre à jour la position
    function updatePositionDisplay(angle) {
      document.getElementById('positionDisplay').textContent = Position: ${angle.toFixed(1)} °;
      const icon = document.getElementById('gripperIcon');
      icon.style.transform = rotate(${angle}deg);
    }

    // Simulations pour test visuel (tu peux les supprimer après)
    setInterval(() => {
      const fakeForce = Math.random() * 10;
      const fakeAngle = (Date.now() / 50) % 360;
      updateForceDisplay(fakeForce);
      updatePositionDisplay(fakeAngle);
    }, 200);
  </script>
</body>
</html>